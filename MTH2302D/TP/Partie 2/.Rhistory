# Installing external library
if(!require(ggpubr))
install.packages("ggpubr");
setwd("C:/Users/Joe/Documents/University/2019 Automne/MTH230D - Probabilite et Statistique/TP/Partie 2");
#Getting Data
data = read.csv("1939689_1903555_1881786.csv", header = TRUE,
col.names = c("id", "name", "nationality", "ppg",
"mpg", "fgm", "fga", "threepm", "rebounds", "assists", "steals", "blocks", "turnovers", "efficiency"));
# Loading library
library("ggpubr");
# Scatter Plot
ggscatter(
data,
x = "steals",
y = "efficiency",
add = "reg.line",
conf.int = TRUE,
cor.method = "pearson",
xlab = "Pertes de Balle",
ylab = "Efficacite"
);
# Corrolations tests
cor.test(data$efficiency, data$steals, method = "pearson");
cor.test(data$efficiency, data$steals, method = "kendall");
cor.test(data$efficiency, data$steals, method = "spearman");
# Shapiro-Wilk normality test
shapiro.test(data$efficiency);
shapiro.test(data$steals);
# Visual Inspection of the data's normality
ggqqplot(data$steals, ylab = "Pertes de balle par Match");
ggqqplot(data$efficiency, ylab = "Efficacite")
#Setting working directory
setwd("C:/Users/Joe/Documents/University/2019 Automne/MTH230D - Probabilite et Statistique/TP/Partie 2");
#Getting Data
data = read.csv("1939689_1903555_1881786.csv", header = TRUE,
col.names = c("id", "name", "nationality", "ppg",
"mpg", "fgm", "fga", "threepm", "rebounds", "assists", "steals", "blocks", "turnovers", "efficiency"));
#Question 1: La nationalité d'un joueur donne-t-elle avantage pour être parmi les élites de la NBA? #
barplot(table(data["nationality"]), main = "Nationalités des 50 meilleurs joueurs");
#Question 2: Est-ce qu'un joueur ayant plus de perte de balle a-t-il toujours moins d'efficacité, existe-t-il une relation entre ses deux variables? #
plot(
x = data$efficiency,
y = data$turnovers,
main = "Correlation entre perte de balle et efficacite",
xlab = "Efficacite",
ylab = "Perte de balle",
xlim = c( min( data$efficiency ) - 1 , max( data$efficiency) + 1 ),
ylim = c( min( data$turnovers ) - 1, max( data$turnovers ) + 1)
); # Creating plot
legend(
x = "bottomright",
legend = paste(
"Pearson's Correlation =",round(cor(data$efficiency, data$turnovers, method = "pearson"),4),
"\nSpearman's Rank Correlation = ", round(cor(x=data$efficiency, y=data$turnovers, method = 'spearman'),4)
)); # Adding Correlations to the plot
abline(lm( data$turnovers ~ data$efficiency), col = "red", lwd=2); # Adding regression line to plot
#Question 3: Ce peut-il que l'augmentation des minutes jouées par match diminue l'efficacité d'un joueur ? #
cor(data$efficiency, data$mpg, method = "spearman");
cor(data$efficiency, data$mpg, method = "kendall");
cor(data$efficiency, data$mpg, method = "pearson")
barplot(table(data["nationality"]), main = "Nationalités des 50 meilleurs joueurs");
plot(
x = data$efficiency,
y = data$turnovers,
main = "Correlation entre perte de balle et efficacite",
xlab = "Efficacite",
ylab = "Perte de balle",
xlim = c( min( data$efficiency ) - 1 , max( data$efficiency) + 1 ),
ylim = c( min( data$turnovers ) - 1, max( data$turnovers ) + 1)
); # Creating plot
legend(
x = "bottomright",
legend = paste(
"Pearson's Correlation =",round(cor(data$efficiency, data$turnovers, method = "pearson"),4),
"\nSpearman's Rank Correlation = ", round(cor(x=data$efficiency, y=data$turnovers, method = 'spearman'),4)
)); # Adding Correlations to the plot
abline(lm( data$turnovers ~ data$efficiency), col = "red", lwd=2); # Adding regression line to plot
cor(data$efficiency, data$mpg, method = "spearman");
cor(data$efficiency, data$mpg, method = "kendall");
cor(data$efficiency, data$mpg, method = "pearson")
linModel <- lm(data$efficiency ~ data$mpg)
summary(linModel)
names(linModel)
summary(linModel)$r.sq
plot(data$efficiency, data$mpg, xlab = "efficacite", ylab = "minutes dans le jeu", main = "efficacite d'un joueur", pch = 15)
abline(lm(data$efficiency ~ data$mpg), col = "red")
linModel <- lm(data$efficiency ~ data$mpg);
summary(linModel);
names(linModel);
summary(linModel)$r.sq;
plot(data$efficiency, data$mpg, xlab = "efficacite", ylab = "minutes dans le jeu", main = "efficacite d'un joueur", pch = 15);
linModel <- lm(data$efficiency ~ data$mpg); # Linear Regression creation
summary(linModel);
summary(linModel);
lm(formula = data$mpg ~ data$efficiency, data= data)
lm(formula = data$mpg ~ data$efficiency)
summary(linModel);
linModel <- lm(data$efficiency ~ data$mpg); # Linear Regression creation
summary(linModel);
resid(linModel)
res = resid(linModel)
plot(data$mpg, res,
+     ylab="Residuals", xlab="Minutes per Game",
+     main="Residual")
plot(data$mpg, res, ylab="Residuals", xlab="Minutes per Game", main="Residual")
abline(0, 0)
library(dplyr)
install.packages(dplyr)
"dplyr"
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
d %>% select(mpg, predicted, residuals) %>% head()
%>% select(mpg, predicted, residuals) %>% head()
select(mpg, predicted, residuals) %>% head()
m1 <- lm(y~x)  #Create a linear model
resid(m1) #List of residuals
plot(density(resid(m1))) #A density plot
qqnorm(resid(m1)) # A quantile normal plot - good for checking normality
qqline(resid(m1))
summary(linModel);
shapiro.test(lm(data$mpg ~ data$efficiency));
shapiro.test(data$mpg,data$efficiency);
shapiro.test(data$mpg);
shapiro.test(data$efficiency);
shapiro.test(data$turnovers)
shapiro.test(data$steals)
library("ggpubr");
ggscatter(
data,
x = "steals",
y = "efficiency",
add = "reg.line",
conf.int = TRUE,
cor.method = "pearson",
xlab = "Pertes de Balle",
ylab = "Efficacite"
);
ggscatter(
data,
x = "turnovers",
y = "efficiency",
add = "reg.line",
conf.int = TRUE,
cor.method = "pearson",
xlab = "Pertes de Balle",
ylab = "Efficacite"
);
ggscatter(
data,
x = "turnovers",
y = "efficiency",
add = "reg.line",
conf.int = TRUE,
cor.method = "pearson",
xlab = "Pertes de Balle",
ylab = "Efficacite"
);
cor.test(data$efficiency, data$turnovers, method = "pearson");
cor.test(data$efficiency, data$turnovers, method = "kendall");
cor.test(data$efficiency, data$turnovers, method = "spearman");
shapiro.test(data$efficiency);
shapiro.test(data$turnovers)
cor.test(data$efficiency, data$turnovers, method = "pearson");
cor.test(data$efficiency, data$turnovers, method = "spearman");
cor.test(data$efficiency, data$turnovers, method = "pearson", conf.level = 0.9)
ggscatter(
data,
x = "turnovers",
y = "efficiency",
add = "reg.line",
conf.int = TRUE,
cor.method = "pearson",
xlab = "Pertes de Balle",
ylab = "Efficacite"
);
plot(
x = data$efficiency,
y = data$turnovers,
main = "Correlation entre perte de balle et efficacite",
xlab = "Efficacite",
ylab = "Perte de balle",
xlim = c( min( data$efficiency ) - 1 , max( data$efficiency) + 1 ),
ylim = c( min( data$turnovers ) - 1, max( data$turnovers ) + 1)
); # Creating plot
legend(
x = "bottomright",
legend = paste(
"Pearson's Correlation =",round(cor(data$efficiency, data$turnovers, method = "pearson"),4),
"\nSpearman's Rank Correlation = ", round(cor(x=data$efficiency, y=data$turnovers, method = 'spearman'),4)
)); # Adding Correlations to the plot
abline(lm( data$turnovers ~ data$efficiency), col = "red", lwd=2); # Adding regression line to plot
linModel <- lm(data$efficiency ~ data$mpg); # Linear Regression creation
summary(linModel);
names(linModel);
summary(linModel)$r.sq;
plot(data$efficiency, data$mpg, xlab = "efficacite", ylab = "minutes dans le jeu", main = "efficacite d'un joueur", pch = 15);
abline(lm(data$efficiency ~ data$mpg), col = "red")
plot(
x = data$efficiency,
y = data$mpg,
main = "Correlation entre minutes jouees et efficacite",
xlab = "Efficacite",
ylab = "Minutes jouees",
xlim = c( min( data$efficiency ) - 1 , max( data$efficiency) + 1 ),
ylim = c( min( data$mpg ) - 1, max( data$mpg ) + 1)
); # Creating plot
# Installing external library
if(!require(ggpubr))
install.packages("ggpubr");
setwd("C:/Users/Joe/Documents/University/2019 Automne/MTH230D - Probabilite et Statistique/TP/Partie 2");
#Getting Data
data = read.csv("1939689_1903555_1881786.csv", header = TRUE,
col.names = c("id", "name", "nationality", "ppg",
"mpg", "fgm", "fga", "threepm", "rebounds", "assists", "steals", "blocks", "turnovers", "efficiency"));
# Loading library
library("ggpubr");
# Scatter Plot
ggscatter(
data,
x = "minutes per game",
y = "efficiency",
add = "reg.line",
conf.int = TRUE,
cor.method = "pearson",
xlab = "Minutes par match",
ylab = "Efficacite"
);
# Corrolations tests
cor.test(data$efficiency, data$mpg, method = "pearson");
cor.test(data$efficiency, data$mpg, method = "spearman");
cor.test(data$efficiency, data$mpg, method = "pearson", conf.level = 0.9);
# Shapiro-Wilk normality test
shapiro.test(data$efficiency);
shapiro.test(data$mpg);
# Visual Inspection of the data's normality
ggqqplot(data$mpg, ylab = "Minutes jouees par Match");
ggqqplot(data$efficiency, ylab = "Efficacite")
ggscatter(
data,
x = "minutes per game",
y = "efficiency",
add = "reg.line",
conf.int = TRUE,
cor.method = "pearson",
xlab = "Minutes par match",
ylab = "Efficacite"
);
ggscatter(
data,
x = data$mpg,
y = data$efficiency,
add = "reg.line",
conf.int = TRUE,
cor.method = "pearson",
xlab = "Minutes par match",
ylab = "Efficacite"
);
ggscatter(
data,
x = data$mpg,
y = data$efficiency,
add = "reg.line",
conf.int = TRUE,
cor.method = "pearson",
xlab = "Minutes par match",
ylab = "Efficacite"
);
plot(
x = data$efficiency,
y = data$mpg,
main = "Correlation entre minutes jouees et efficacite",
xlab = "Efficacite",
ylab = "Minutes jouees",
xlim = c( min( data$efficiency ) - 1 , max( data$efficiency) + 1 ),
ylim = c( min( data$mpg ) - 1, max( data$mpg ) + 1)
); # Creating plot
plot(
x = data$efficiency,
y = data$mpg,
main = "Correlation entre minutes jouees et efficacite",
xlab = "Efficacite",
ylab = "Minutes jouees",
xlim = c( min( data$efficiency ) - 1 , max( data$efficiency) + 1 ),
ylim = c( min( data$mpg ) - 1, max( data$mpg ) + 1)
); # Creating plot
ggqqplot(data$mpg, ylab = "Minutes jouees par Match");
ggqqplot(data$efficiency, ylab = "Efficacite")
shapiro.test(data$efficiency);
shapiro.test(data$mpg);
cor.test(data$efficiency, data$mpg, method = "pearson");
cor.test(data$efficiency, data$mpg, method = "spearman");
cor.test(data$efficiency, data$mpg, method = "pearson", conf.level = 0.9);
cor.test(data$efficiency, data$mpg, method = "pearson");
cor.test(data$efficiency, data$mpg, method = "pearson", conf.level = 0.9);
ggscatter(
data,
x = data$mpg,
y = data$efficiency,
add = "reg.line",
conf.int = TRUE,
cor.method = "pearson",
xlab = "Minutes par match",
ylab = "Efficacite"
);
ggscatter(
data,
x = data$mpg,
y = data$efficiency,
add = "reg.line",
conf.int = TRUE,
cor.method = "pearson",
xlab = "Minutes par match",
ylab = "Efficacite"
)
plot(
x = data$efficiency,
y = data$mpg,
main = "Correlation entre minutes jouees et efficacite",
xlab = "Efficacite",
ylab = "Minutes jouees",
xlim = c( min( data$efficiency ) - 1 , max( data$efficiency) + 1 ),
ylim = c( min( data$mpg ) - 1, max( data$mpg ) + 1)
); # Creating plot
legend(
x = "bottomright",
legend = paste(
"Pearson's Correlation =",round(cor(data$efficiency, data$turnovers, method = "pearson"),4),
"\nSpearman's Rank Correlation = ", round(cor(x=data$efficiency, y=data$turnovers, method = 'spearman'),4)
)); # Adding Correlations to the plot
abline(lm( data$turnovers ~ data$efficiency), col = "red", lwd=2); # Adding regression line to plot
plot(
x = data$efficiency,
y = data$mpg,
main = "Correlation entre minutes jouees et efficacite",
xlab = "Efficacite",
ylab = "Minutes jouees",
xlim = c( min( data$efficiency ) - 1 , max( data$efficiency) + 1 ),
ylim = c( min( data$mpg ) - 1, max( data$mpg ) + 1)
); # Creating plot
legend(
x = "bottomright",
legend = paste(
"Pearson's Correlation =",round(cor(data$efficiency, data$turnovers, method = "pearson"),4),
"\nSpearman's Rank Correlation = ", round(cor(x=data$efficiency, y=data$turnovers, method = 'spearman'),4)
)); # Adding Correlations to the plot
abline(lm( data$mpg ~ data$efficiency), col = "red", lwd=2); # Adding regression line to plot
data = read.csv("1939689_1903555_1881786.csv", header = TRUE,
col.names = c("id", "name", "nationality", "ppg",
"mpg", "fgm", "fga", "threepm", "rebounds", "assists", "steals", "blocks", "turnovers", "efficiency"));
plot(
donnees$turnovers,
donnees$efficiency,
col="blue",
main="Le nuage de points",
xlab="Perte de balle",
ylab="EfficacitÃ©"
); # Creating plot
regLin <- lm(data$efficiency ~ data$turnovers); #Creating regression line
abline(regLin, col="red"); # Adding regression line to plot
summary(regLin); #Displaying variable
plot(
data$turnovers,
data$efficiency,
col="blue",
main="Le nuage de points",
xlab="Perte de balle",
ylab="EfficacitÃ©"
); # Creating plot
regLin <- lm(data$efficiency ~ data$turnovers); #Creating regression line
abline(regLin, col="red"); # Adding regression line to plot
summary(regLin); #Displaying variable
