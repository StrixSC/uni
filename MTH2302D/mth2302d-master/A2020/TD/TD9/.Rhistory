setwd(dir="C:/Users/liljo/Dropbox/MTH2302D/Via_A2020/TD9")
distribution_moyenne <- read.csv("distribution_moyenne.csv", header = TRUE, sep = ";",dec = ",")
distribution_moyenne
distribution_moyenne_n1 = distribution_moyenne[,1]          # Extrait la 1ere colonne de "distribution_moyenne.csv"
distribution_moyenne_n3 = distribution_moyenne[,1:3]        # Extrait les colonnes 1 à 3
distribution_moyenne_n10 = distribution_moyenne[,1:10]      # Extrait les colonnes 1 à 10
distribution_moyenne_n30 = distribution_moyenne[,1:30]      # Extrait les colonnes 1 à 30
# Calcul de la moyenne de chaque ligne.
moyenne_n1 = distribution_moyenne_n1                   # Pas besoin de rowMeans() car ici chaque ligne contient 1 seule colonne
moyenne_n3 = rowMeans(distribution_moyenne_n3)         # rowMeans calcule la moyenne sur chaque ligne
moyenne_n10 = rowMeans(distribution_moyenne_n10)
moyenne_n30 = rowMeans(distribution_moyenne_n30)
par(mfcol=c(2,2))                   # Création de (m=2)*(n=2)=4 fenêtres d'affichage
par(mar=c(4,4,4,4))            # définit les marges inférieure, gauche, supérieure et droite
# respectivement de la région de tracé en nombre de lignes de texte.
hist(moyenne_n1,main=expression("Histogramme de "~bar(X)~" pour "~ n==1),xlab=expression(bar(X)),ylab="Fréquence",col="green")
hist(moyenne_n3,main=expression("Histogramme de "~bar(X)~" pour "~ n==3),xlab=expression(bar(X)),ylab="Fréquence",col="blue")
hist(moyenne_n10,main=expression("Histogramme de "~bar(X)~" pour "~ n==10),xlab=expression(bar(X)),ylab="Fréquence",col="red")
hist(moyenne_n30,main=expression("Histogramme de "~bar(X)~" pour "~ n==30),xlab=expression(bar(X)),ylab="Fréquence",col="yellow")
qqnorm(moyenne_n1); qqline(moyenne_n1, col="green", lwd=2)
qqnorm(moyenne_n3); qqline(moyenne_n3, col="blue", lwd=2)
qqnorm(moyenne_n10); qqline(moyenne_n10, col="red", lwd=2)
qqnorm(moyenne_n30); qqline(moyenne_n30, col="yellow", lwd=2)
moy_moy = c(mean(moyenne_n1),mean(moyenne_n3),mean(moyenne_n10),mean(moyenne_n30))
moy_moy
# Variances
var_moy = c(var(moyenne_n1),var(moyenne_n3),var(moyenne_n10),var(moyenne_n30))
var_moy
n_moy = c(1,3,10,30)
var_moy_n = var_moy*n_moy       # calcul de n*Var(Xbar)  (permet de répondre à la question b.)
var_moy_n
stat_descriptives = data.frame("Moyenne"=moy_moy,"Variance"=var_moy,"n"=n_moy,"Variance fois n"=var_moy_n)
stat_descriptives
rm(list = ls())
stat_descriptives
intervalle_confiance <- read.csv("intervalle_confiance.csv", header = TRUE, sep = ";",dec = ",")
intervalle_confiance
t = qt(1-0.05/2, 9)
t                         # ou encore,
tt = qt(0.05/2, 9, lower.tail = FALSE)
tt
M = numeric()                   # Initialisation de M: matrice à valeurs numériques (initialement vide)
for(i in 1:950){
#set.seed(i)
M = rbind(M,rnorm(10, mean = 2, sd = 2))
}
class(M)
dim(M)
M=as.data.frame(M)
class(M)
dim(M)
names(M)=c('X1','X2','X3','X4','X5','X6','X7','X8','X9','X10')
intervalle_confiance_2 = rbind(intervalle_confiance,M)
intervalle_confiance_2
dim(intervalle_confiance_2)
moyenne = apply(intervalle_confiance_2, 1, mean)    # Moyenne ligne par ligne  (remplacer 1 par 2 s'il s'agit des colonnes)
variance = apply(intervalle_confiance_2, 1, var)    # Variance ligne par ligne
n = 10
Borne_inf = moyenne - (t*sqrt(variance/n))
Borne_sup = moyenne + (t*sqrt(variance/n))
IC = data.frame(Borne_inf,Borne_sup)
IC[1:5,]
sum((Borne_inf<=2)*(Borne_sup>=2))/1000
mean(moyenne)
setwd(dir="C:/Users/liljo/Dropbox/MTH2302D/Via_A2020/TD9")
distribution_moyenne <- read.csv("distribution_moyenne.csv", header = TRUE, sep = ";",dec = ",")
distribution_moyenne
1:3
distribution_moyenne_n1 = distribution_moyenne[,1]          # Extrait la 1ere colonne de "distribution_moyenne.csv"
distribution_moyenne_n3 = distribution_moyenne[,1:3]        # Extrait les colonnes 1 à 3
distribution_moyenne_n10 = distribution_moyenne[,1:10]      # Extrait les colonnes 1 à 10
distribution_moyenne_n30 = distribution_moyenne[,1:30]
moyenne_n1 = distribution_moyenne_n1                   # Pas besoin de rowMeans() car ici chaque ligne contient 1 seule colonne
moyenne_n3 = rowMeans(distribution_moyenne_n3)         # rowMeans calcule la moyenne sur chaque ligne
moyenne_n10 = rowMeans(distribution_moyenne_n10)
moyenne_n30 = rowMeans(distribution_moyenne_n30)
par(mfcol=c(2,2))                   # Création de (m=2)*(n=2)=4 fenêtres d'affichage
par(mar=c(4,4,4,4))            # définit les marges inférieure, gauche, supérieure et droite
# respectivement de la région de tracé en nombre de lignes de texte.
hist(moyenne_n1,main=expression("Histogramme de "~bar(X)~" pour "~ n==1),xlab=expression(bar(X)),ylab="Fréquence",col="green")
hist(moyenne_n3,main=expression("Histogramme de "~bar(X)~" pour "~ n==3),xlab=expression(bar(X)),ylab="Fréquence",col="blue")
hist(moyenne_n10,main=expression("Histogramme de "~bar(X)~" pour "~ n==10),xlab=expression(bar(X)),ylab="Fréquence",col="red")
hist(moyenne_n30,main=expression("Histogramme de "~bar(X)~" pour "~ n==30),xlab=expression(bar(X)),ylab="Fréquence",col="yellow")
qqnorm(moyenne_n1); qqline(moyenne_n1, col="green", lwd=2)
qqnorm(moyenne_n3); qqline(moyenne_n3, col="blue", lwd=2)
qqnorm(moyenne_n10); qqline(moyenne_n10, col="red", lwd=2)
qqnorm(moyenne_n30); qqline(moyenne_n30, col="yellow", lwd=2)
c(1, 2, 5)
moy_moy = c(mean(moyenne_n1),mean(moyenne_n3),mean(moyenne_n10),mean(moyenne_n30))
moy_moy
var_moy = c(var(moyenne_n1),var(moyenne_n3),var(moyenne_n10),var(moyenne_n30))
var_moy
n_moy = c(1,3,10,30)
var_moy_n = var_moy*n_moy       # calcul de n*Var(Xbar)  (permet de répondre à la question b.)
var_moy_n
rm(list = ls())
intervalle_confiance <- read.csv("intervalle_confiance.csv", header = TRUE, sep = ";",dec = ",")
intervalle_confiance
t = qt(1-0.05/2, 9)
t
tt = qt(0.05/2, 9, lower.tail = FALSE)
tt
M = numeric()
for(i in 1:950){
#set.seed(i)
M = rbind(M,rnorm(10, mean = 2, sd = 2))
}
class(M)
dim(M)
M=as.data.frame(M)
class(M)
names(M)=c('X1','X2','X3','X4','X5','X6','X7','X8','X9','X10')
intervalle_confiance_2 = rbind(intervalle_confiance,M)
moyenne = apply(intervalle_confiance_2, 1, mean)    # Moyenne ligne par ligne  (remplacer 1 par 2 s'il s'agit des colonnes)
variance = apply(intervalle_confiance_2, 1, var)    # Variance ligne par ligne
n = 10
# Le quantile t est déjà calculé
# Calculs des intervalles de confiance
Borne_inf = moyenne - (t*sqrt(variance/n))
Borne_sup = moyenne + (t*sqrt(variance/n))
IC = data.frame(Borne_inf,Borne_sup)
IC[1:5,]
1<2
(1<2)*(2<3)
sum((Borne_inf<=2)*(Borne_sup>=2))/1000
